<!DOCTYPE html>

<html lang="en">
<head>
<link href="https://fonts.googleapis.com/css2?family=Roboto+Slab&amp;display=swap" rel="stylesheet"/>
<meta charset="utf-8"/>
<title>Live Grid from Google Sheet</title>
<meta content="width=device-width, initial-scale=1.0" name="viewport"/>
<style>
.popup-overlay { 
  position: fixed;
  top: 0; left: 0;
  width: 100vw;
  height: 100vh;
  background-color: rgba(0, 0, 0, 0.5);
  display: none;
  z-index: 9999;
  justify-content: center;

  align-items: flex-start;  /* ‚úÖ change this */
  padding-top: 30px;        /* ‚úÖ this replaces margin-top on .popup-box */
}

.popup-overlay.active {
  display: flex;
}

.popup-box {
  background: #fff;
  color: #4a2c23;
  border-radius: 20px;
  max-width: 330px;
  padding: 20px;
  margin-top: 90px; /* ‚úÖ fixed '90x' to '90px' */
  border: 2px solid #000;
  box-shadow: 0 6px 30px rgba(0, 0, 0, 0.2);
  text-align: center;
  position: relative;
  
  font-family: 'Roboto Slab', serif;
  .popup-box.active {
  opacity: 1;
  transform: translateY(0);  /* üëà slide up */
}
}

.popup-close {
  position: absolute;
  top: -12px;
  right: -12px;
  background: #fff;
  border: 2px solid #ccc;
  width: 26px;
  height: 26px;
  font-size: 18px;
  font-weight: bold;
  border-radius: 50%;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.15);
}


  100% { opacity: 1; transform: scale(1); }
}
}
  /* Popup styles */
.popup-overlay {
  position: fixed;
  inset: 0;
  background-color: rgba(0, 0, 0, 0.5);
  display: none;
  z-index: 1005;
  justify-content: center;
  align-items: center;
}

.popup-overlay.active {
  display: flex;
}

.popup-box {
  background: #fff;
  color: #4a2c23;
  border-radius: 20px;
  max-width: 330px;
  padding: 20px;
  box-shadow: 0 6px 30px rgba(0, 0, 0, 0.2);
  text-align: center;
  position: relative;
  
  font-family: 'Roboto Slab', serif;
  margin-top: 10px; /* üëà You can adjust this number freely */
}

.popup-close {
  position: absolute;
  top: -5px;
  right: -5px;
  width: 20px;
  height: 20px;
  background: #fff;
  border: 2px solid #000;
  border-radius: 50%;
  font-size: 18px;
  font-weight: bold;
  color: #000;
  line-height: 1;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.2);
  padding-bottom: 1px; /* ‚úÖ slight adjustment to center the ‚Äú√ó‚Äù vertically */
}


  100% { opacity: 1; transform: scale(1); }
}
  .section-title {
  opacity: 0;
  
}

  100% {
    opacity: 1;
    transform: translateY(0);
  }
}

.product-box {
  opacity: 0;
  
}
  .address-popup-overlay {
  position: fixed;
  top: 0; left: 0;
  width: 100vw;
  height: 100vh;
  background: rgba(0,0,0,0.6);
  display: none;
  align-items: flex-start;   /* üëà move to top */
  justify-content: center;
  padding-top: 50px;         /* üëà adjust how much upar you want */
  z-index: 1000;
}

.address-popup-box {
  background: #fff;
  width: 90%;
  max-width: 400px;
  padding: 24px 20px;
  border-radius: 16px;
  position: relative;
  
}


  to { opacity: 1; transform: translateY(0); }
}

.close-btn {
  position: absolute;
  top: -12px;
  right: -12px;
  background: #fff;
  border: 2px solid #696969;
  color: #696969;
  width: 26px;
  height: 26px;
  font-size: 18px;
  font-weight: bold;
  border-radius: 50%;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  box-shadow: 0 2px 6px rgba(0,0,0,0.1);
}

.address-field {
  position: relative;
  margin-bottom: 22px;
}

.address-field input {
  width: 100%;
  padding: 20px 12px 6px;
  border: 2px solid #ccc;
  border-radius: 10px;
  font-size: 16px;
  font-family: 'Segoe UI', sans-serif;
  transition: all 0.2s ease;
  background-color: transparent;
}

.address-field input:focus {
  border-color: #696969;
  outline: none;
}

.address-field label {
  position: absolute;
  top: 16px;
  left: 14px;
  font-size: 16px;
  color: #999;
  background: white;
  padding: 0 4px;
  transition: 0.2s ease all;
  pointer-events: none;
}

.address-field input:focus + label,
.address-field input:not(:placeholder-shown) + label {
  top: -8px;
  left: 12px;
  font-size: 13px;
  color: #696969;
}

.button-row {
  display: flex;
  gap: 10px;
}

.cancel-btn {
  background: #e0e0e0;
  color: #696969;
  flex: 1;
  font-weight: bold;
  border-radius: 30px;
  border: none;
  padding: 10px;
}

.whatsapp-btn {
  background: #000;
  color: #fff;
  flex: 1;
  font-weight: bold;
  border-radius: 30px;
  border: none;
  padding: 10px;
}
  .section-title {
  grid-column: span 2;
  font-size: 18px;
  font-weight: normal;
  text-align: center;
  margin: 6px 0 !important; /* üëà This overrides any default spacing */
  font-family: 'Segoe UI', sans-serif;
  color: #222;
  display: flex;
  align-items: center;
  justify-content: center;
}
  
  font-weight: 700;
  text-align: center;
  margin: 6px 0 6px;
  font-family: 'Segoe UI', sans-serif;
  color: #222;
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
}

-title::before,
-title::after {
  content: "";
  flex: 1;
  height: 1px;
  background: #ccc;
  margin: 0 16px;
}
  .magnify-icon {
  position: absolute;
  top: 6px;
  right: 6px;
  width: 20px;     /* icon size */
  height: 20px;
  border-radius: 50%;
  background: #fff;
  padding: 2px;
  box-shadow: 0 2px 5px rgba(0,0,0,0.2);
  cursor: pointer;
  z-index: 5;
  display: flex;
  align-items: center;
  justify-content: center;
  -webkit-tap-highlight-color: transparent; /* remove blue click */
}

.magnify-icon img {
  width: 100%;
  height: 100%;
  object-fit: contain;
  border-radius: 50%;
  -webkit-user-drag: none;
  user-select: none;
  -webkit-tap-highlight-color: transparent; /* also on image */
}
.magnify-icon {
  position: absolute;
  top: 6px;
  right: 6px;
  width: 26px;
  height: 26px;
  border-radius: 50%;
  background: #fff;
  padding: 4px;
  box-shadow: 0 2px 5px rgba(0,0,0,0.2);
  cursor: pointer;
  z-index: 5;
  display: flex;
  align-items: center;
  justify-content: center;
}

.magnify-icon img {
  width: 100%;
  height: 100%;
  object-fit: contain;
  border-radius: 50%;
}
  .image-wrapper {
  position: relative;
}
.image-wrapper img {
  width: 100%;
  border-radius: 20px;
  object-fit: cover;
  aspect-ratio: 1 / 1;
}
.magnify-icon {
  position: absolute;
  top: 6px;
  right: 6px;
  width: 20px;     /* reduced from 26px */
  height: 20px;    /* reduced from 26px */
  border-radius: 50%;
  background: #fff;
  padding: 2px;    /* reduced from 4px */
  box-shadow: 0 2px 5px rgba(0,0,0,0.2);
  cursor: pointer;
  z-index: 5;
  display: flex;
  align-items: center;
  justify-content: center;
}
.image-popup-overlay {
  position: fixed;
  top: 0; left: 0;
  width: 100vw; height: 100vh;
  background: rgba(0,0,0,0.8);
  display: none;
  align-items: flex-start;
  justify-content: center;
  padding-top: 1px;
  z-index: 999;
}
.image-popup-overlay img {
  max-width: 90%;
  max-height: 90%;
  border-radius: 20px;
  box-shadow: 0 0 20px rgba(0,0,0,0.4);
}
    * { box-sizing: border-box; margin: 0; padding: 0; user-select: none; }
    body { font-family: 'Segoe UI', sans-serif; background: #ffffff; padding-bottom: 120px; }
    .grid-container {
      display: grid; grid-template-columns: repeat(2, 1fr);
      gap: 14px; padding: 14px;
    }
    .product-box {
  background: transparent;
  border-radius: 0;
  box-shadow: none;
  overflow: visible;
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  position: relative;
  margin-bottom: px; /* spacing between products */
}
    .product-box img {
      width: 100%; border-radius: 20px; object-fit: cover; aspect-ratio: 1/1;
    }
  .product-badge {
  position: absolute;
  top: -2px;
  left: -2px;
  background: #f7f7f7;
  border: 1px solid #ccc;
  border-radius: 50%;
  width: 20px;
  height: 20px;
  font-size: 10px;
  font-weight: bold;
  color: #333;
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 10;
}
    .price-check {
  display: flex;
  align-items: center;
  gap: 10px; /* spacing between ‚Çπ price and checkbox */
  margin-top: 6px;
  padding: 0 4px;
}

.price {
  font-size: 16px;
  font-weight: bold;
  color: green;
  flex-shrink: 0;
}

.product-check {
  transform: scale(1.2);
  cursor: pointer;
  margin-left: auto;
}

.stock-info {
  font-size: 13px;
  color: #555;
  margin: 4px 4px 8px 4px;
}
    .price { font-size: 16px; font-weight: bold; color: green; }
    .product-check { transform: scale(1.3); cursor: pointer; }
    .stock-info {
  font-size: 13px;
  color: #555;
  margin-top: 4px;
  padding-left: 0;
  padding-right: 0;
}
    .quantity-control {
      margin: 8px auto 0; width: 120px; height: 42px;
      display: flex; align-items: center; justify-content: space-between;
      border: 2px solid #ccc; border-radius: 14px;
      background: #f7f7f7; overflow: hidden;
    }
    .quantity-control button {
      width: 40px; height: 100%; border: none;
      background: transparent; font-size: 20px;
      font-weight: bold; color: #999; cursor: pointer;
    }
    .quantity-control span {
      width: 40px; text-align: center; font-size: 18px;
      font-weight: bold; line-height: 40px; color: #999;
    }
    .out-of-stock {
      margin: 8px auto 0; width: 120px; height: 42px;
      display: flex; align-items: center; justify-content: center;
      border: 2px solid #ccc; border-radius: 14px;
      background: #f7f7f7; font-size: 14px; font-weight: bold; color: #999;
    }
    .info-strip {
  position: fixed;
  bottom: 76px; /* keep this same */
  left: 16px;
  right: 16px;
  padding: 10px 16px 8px;
  background: #f0f0f0;
  font-size: 15px;
  font-weight: 500;
  box-shadow: 0 0 8px rgba(0,0,0,0.08);
  display: none;
  text-align: center;
  z-index: 998;

  /* ‚úÖ Corners */
  border-top-left-radius: 12px;
  border-top-right-radius: 12px;
  border-bottom-left-radius: 0;
  border-bottom-right-radius: 0;

  /* ‚úÖ Key fix to kill visual gap */
  margin-bottom: -4px; 
}
    .sticky-button {
  position: fixed;
  bottom: 20px;
  left: 16px;
  right: 16px;
  padding: 16px;
  background: #1473E6;
  color: #fff;
  font-size: 16px;
  font-weight: 600;
  text-align: center;
  display: none;
  z-index: 999;
  cursor: pointer;
  border: none;

  /* ‚úÖ Corners flat at top */
  border-top-left-radius: 0;
  border-top-right-radius: 0;
  border-bottom-left-radius: 12px;
  border-bottom-right-radius: 12px;
}

    .shipping-popup {
      display: none; position: fixed; top: 50%; left: 50%;
      transform: translate(-50%, -50%);
      background: #e9fef1; border: 2px solid #2c8f5b;
      border-radius: 14px; padding: 20px;
      width: 340px; max-width: 90%; box-shadow: 0 8px 20px rgba(0,0,0,0.1);
      z-index: 1002;
    }
    .shipping-popup p {
      font-size: 15px; font-weight: 500; color: #111;
      text-align: center; line-height: 1.5; margin: 0;
    }
    .shipping-close {
  position: absolute;
  top: -10px;
  right: -10px;
  background: #fff;
  color: #2c8f5b;
  border: 2px solid #2c8f5b;
  width: 22px;
  height: 22px;
  font-size: 16px;
  font-weight: bold;
  border-radius: 50%;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

    .address-field {
  position: relative;
  margin-bottom: 22px;
}

.address-field input {
  width: 100%;
  padding: 20px 12px 6px;
  border: 2px solid #ccc;
  border-radius: 10px;
  font-size: 16px;
  font-family: 'Segoe UI', sans-serif;
  transition: all 0.2s ease;
  background-color: transparent;
}

.address-field input:focus {
  border-color: #1473E6;
  outline: none;
}

.address-field label {
  position: absolute;
  top: 16px;
  left: 14px;
  font-size: 16px;
  color: #999;
  background: white;
  padding: 0 4px;
  transition: 0.2s ease all;
  pointer-events: none;
}

.address-field input:focus + label,
.address-field input:not(:placeholder-shown) + label {
  top: -8px;
  left: 12px;
  font-size: 13px;
  color: #1473E6;
}


    
    .button-row {
      display: flex; gap: 10px; margin-top: 10px;
    }
    .cancel-btn { background: #e0e0e0; color: ##696969; flex: 1; }
    .whatsapp-btn { background: #1473E6; color: #fff; flex: 1; }

    .custom-popup {
      position: fixed; top: 50%; left: 50%;
      transform: translate(-50%, -50%);
      background: #fefefe; border: 3px solid #e2e2e2;
      border-radius: 16px; padding: 20px;
      width: 340px; max-width: 90%;
      text-align: center; box-shadow: 0 8px 30px rgba(0,0,0,0.12);
      display: none; z-index: 1001;
    }
    .custom-popup p { margin-bottom: 16px; font-size: 14px; font-weight: 500; color: #111; }
    .custom-popup button {
      background: #1473E6; color: #fff;
      padding: 8px 14px; font-size: 14px;
      border: none; border-radius: 30px; cursor: pointer;
    }
  </style>
</head>
<body>
<!-- üîΩ Love Letter Popup -->
<div class="popup-overlay" id="popupOverlay">
<div class="popup-box" style="margin-top: 70px;"> <!-- üëà Push below announcement bar -->
<span class="popup-close" onclick="togglePopup()">√ó</span>
<img class="popup-logo" src="https://i.postimg.cc/N0xZygPg/1000029536-modified-1.jpg" style="width: 60px; height: 60px; border-radius: 50%; object-fit: cover; margin-bottom: 10px;"/>
<div class="popup-insta" style="margin-bottom: 10px;">
<a href="https://instagram.com/giftsandglory_" style="text-decoration: none; color: #4a2c23; font-weight: bold;" target="_blank">@giftsandglory_</a>
</div>
<div class="popup-text" style="color: #4a2c23; font-size: 14px; line-height: 1.6;">
      ‚Ä¢ Every moment deserves a little glory ‚ú®<br/>
      ‚Ä¢ Make it memorable with <a href="https://instagram.com/giftsandglory_" style="color:#1a73e8;" target="_blank">@giftsandglory_</a><br/>
      ‚Ä¢ Fashion Jewellery ‚Ä¢ Real Flowers Jewels üåπ ‚Ä¢ Keychains &amp; more
    </div>
</div>
</div>
<!-- üîΩ Header HTML -->
<header "position:="" #ccc;"="" #fff;="" 0;="" 1003;="" 12px="" 16px;="" 1px="" align-items:="" background:="" border-bottom:="" center;="" display:="" flex;="" justify-content:="" padding:="" solid="" space-between;="" sticky;="" style="background: #ffffff; z-index: 1003; padding: 10px 16px; display: flex; align-items: center; justify-content: space-between; border-bottom: 1px solid #ccc;" top:="" z-index:="">
<div onclick="toggleMenu()" style="font-size: 26px; cursor: pointer;">‚ò∞</div>
<div style="font-family: 'Roboto Slab', serif; font-size: 20px;">giftsandglory_</div>
<img onclick="togglePopup()" src="https://i.postimg.cc/DfpVrcPL/IMG-20250723-040829.jpg" style="height: 24px; cursor: pointer; object-fit: contain;"/>
</header>
<!-- üîΩ Announcement Bar -->
<div class="announcement-bar" style="background: #000; color: #fff; text-align: center; padding: 4px 10px; font-size: 15px; font-family: 'Roboto Slab', serif;">
  Min Order 149/- | Made in India üáÆüá≥
</div>
<!-- üîΩ Side Menu -->
<div id="menuOverlay" onclick="toggleMenu()" style="position: fixed; inset: 0; background: rgba(0,0,0,0.4); z-index: 1002; display: none;"></div>
<nav id="sideMenu" style="position: fixed; top: 0; left: -100%; height: 100%; width: 260px; background: #fff; z-index: 1003; transition: 0.3s;">
<!-- üîΩ Profile circle image -->
<!-- üîΩ Logo row: Left image + right text -->
<div style="display: flex; align-items: center; gap: 12px; padding: 16px;">
<img src="https://i.postimg.cc/N0xZygPg/1000029536-modified-1.jpg" style="width: 40px; height: 40px; border-radius: 50%; object-fit: cover;"/>
<span style="font-family: 'Roboto Slab', serif; font-size: 17px;">giftsandglory_</span>
</div>
<hr style="margin: 0 16px;"/>
<div style="padding: 16px; font-family: 'Roboto Slab', serif; font-size: 16px;">
<div style="margin-bottom: 12px;">Home</div>
<div style="margin-bottom: 12px;">home ‚Ä∫</div>
<div style="margin-bottom: 12px;">Track Order</div>
</div>
</nav>
<!-- Product Grid -->
<div class="grid-container" id="productGrid"></div>
<div class="info-strip" id="infoStrip"></div>
<div class="sticky-button" id="showAddressBtn">Add address details</div>
<!-- Minimum Order Popup -->
<div class="custom-popup" id="orderPopup">
<p id="orderPopupText">Minimum order amount is ‚Çπ99. Please add more items.</p>
<button onclick="orderPopup.style.display='none'">OK</button>
</div>
<!-- Shipping Popup -->
<div class="shipping-popup" id="shippingPopup">
<button class="shipping-close" onclick="document.getElementById('shippingPopup').style.display='none'">√ó</button>
<p id="shippingPopupText">Shipping info will appear here</p>
</div>
<script>
  function showPopup(imageUrl) {
  document.getElementById("popupImage").src = imageUrl;
  document.getElementById("imagePopup").style.display = "flex";
}
function hidePopup() {
  document.getElementById("imagePopup").style.display = "none";
}
const sheetURL = "https://opensheet.elk.sh/1cdAdUYr58Qocj3MW2546djjwZfcul7oF-g2e3I1WtoE/Sheet1";;
let shippingCharge = 70;
let shippingText = "Shipping charge ‚Çπ70 ‚Äì Helps us deliver your order quickly and ship it via trusted courier partners.";
let productData = [];
let MIN_ORDER = 99;
let MIN_ORDER_MESSAGE = "Minimum order amount is ‚Çπ99. Please add more items.";

fetch(sheetURL)
  .then(res => res.json())
  .then(data => {
    productData = data;
productData = data;

// Paste below this line üëá
if (data[0].min_order_amount) MIN_ORDER = parseInt(data[0].min_order_amount);
if (data[0].min_order_message) MIN_ORDER_MESSAGE = data[0].min_order_message;

if (data[0].shipping_charge) shippingCharge = parseInt(data[0].shipping_charge);
if (data[0].shipping_text) shippingText = data[0].shipping_text;
    if (data[0].shipping_charge) shippingCharge = parseInt(data[0].shipping_charge);
    if (data[0].shipping_text) shippingText = data[0].shipping_text;
    document.getElementById("shippingPopupText").innerText = shippingText;
    renderProducts();
  });

function renderProducts() {
  const grid = document.getElementById("productGrid");
  grid.innerHTML = "";

  let currentBadge = 1;
  let productIndex = 0; // ‚úÖ Track only real product rows



  productData.forEach((item, index) => {
  const isHeading = !item.image && item.section;
  const isProduct = item.image && item.price;

    if (isHeading) {
      grid.innerHTML += `<div class="section-title">${item.section}</div>`;
      currentBadge = 1; // reset badge for new section
      return;
    }

    if (isProduct) {
      const stock = parseInt(item.stock || 0);
      const isOut = stock === 0;
      const badge = currentBadge++;

      grid.innerHTML += `
        <div class="product-box">
          <div class="product-badge">${badge}</div>
          <div class="image-wrapper">
            <img src="${item.image}" />
            <div class="magnify-icon" onclick="showPopup('${item.image}')">
              <img src="https://i.postimg.cc/1z7c8J5g/1000024118-modified.png" alt="Zoom" />
            </div>
          </div>
          <div class="price-check">
            <div class="price">‚Çπ${item.price}</div>
            <input type="checkbox" class="product-check" data-id="${index}" ${isOut ? "disabled" : ""}>
          </div>
          <div class="stock-info">In stock - ${stock}</div>
          ${isOut ? `<div class="out-of-stock">Out of Stock</div>` : `
            <div class="quantity-control">
              <button onclick="changeQty(${index}, -1)">‚àí</button>
              <span id="qty-${index}">1</span>
              <button onclick="changeQty(${index}, 1)">+</button>
            </div>`}
        </div>`;
    }
  });
function animateProductBoxes() {
  const boxes = document.querySelectorAll(".product-box");
  boxes.forEach((box, i) => {
    box.style.animationDelay = `${i * 100}ms`;
  });
}}
    

function changeQty(i, delta) {
  const el = document.getElementById(`qty-${i}`);
  let qty = parseInt(el.textContent);
  if (delta === -1 && qty > 1) qty--;
  if (delta === 1) qty++;
  el.textContent = qty;
  updateUI();
}


function getSelectedItems() {
  return [...document.querySelectorAll(".product-check")].map(cb => {
    const index = +cb.getAttribute("data-id");
    const qtyEl = document.getElementById(`qty-${index}`);
    const qty = qtyEl ? parseInt(qtyEl.textContent) : 1;
    return cb.checked ? { id: index, qty } : null;
  }).filter(Boolean);
}
function updateUI() {
  const selected = getSelectedItems();
  const subtotal = selected.reduce((sum, p) => sum + (parseInt(productData[p.id].price) * p.qty), 0);
  const total = subtotal + shippingCharge;
  const strip = document.getElementById("infoStrip");
  strip.style.display = selected.length ? "block" : "none";
  document.getElementById("showAddressBtn").style.display = selected.length ? "block" : "none";
  strip.innerHTML = `
    <div style="display:flex;justify-content:center;align-items:center;gap:6px;flex-wrap:wrap;">
      <span>Total: ‚Çπ${total} <span style="color:#555;">(incl. shipping)</span></span>
      <span id="infoIcon" style="cursor:pointer;font-size:17px;background:#eee;border-radius:50%;width:20px;height:20px;display:inline-flex;align-items:center;justify-content:center;">‚ìò</span>
    </div>`;
  document.getElementById("infoIcon")?.addEventListener("click", () => {
    document.getElementById("shippingPopup").style.display = "block";
  });
}



document.addEventListener("change", updateUI);
document.getElementById("showAddressBtn").onclick = () => addressPopup.style.display = "flex";
</script>
<div class="image-popup-overlay" id="imagePopup" onclick="hidePopup()" style="position: fixed; inset: 0; background: rgba(0,0,0,0.8); display: none; justify-content: center; align-items: start; z-index: 9999; padding-top: 60px;">
<img id="popupImage" src="" style="max-width: 90vw; max-height: 80vh; object-fit: contain; border-radius: 20px;"/>
</div>
<!-- Address Popup -->
<div class="address-popup-overlay" id="addressPopup">
<div class="address-popup-box">
<span class="close-btn" onclick="closeAddressPopup()">√ó</span>
<div class="address-field">
<input id="fullname" placeholder=" "/>
<label for="fullname">Full Name</label>
</div>
<div class="address-field">
<input id="state" placeholder=" "/>
<label for="state">State</label>
</div>
<div class="address-field">
<input id="city" placeholder=" "/>
<label for="city">City</label>
</div>
<div class="address-field">
<input id="pincode" placeholder=" "/>
<label for="pincode">Pincode</label>
</div>
<div class="address-field">
<input id="address" placeholder=" "/>
<label for="address">Your Full Address</label>
</div>
<div class="address-field">
<input id="phone" placeholder=" "/>
<label for="phone">Phone Number</label>
</div>
<div class="address-field">
<input id="altphone" placeholder=" "/>
<label for="altphone">Alternate Phone (Optional)</label>
</div>
<div class="button-row">
<button class="cancel-btn" onclick="closeAddressPopup()">Cancel</button>
<button class="whatsapp-btn" onclick="confirmAddress()">Confirm Address</button>
</div>
</div>
</div>
<script>
  function openAddressPopup() {
    document.getElementById("addressPopup").style.display = "flex";
  }

  function closeAddressPopup() {
    document.getElementById("addressPopup").style.display = "none";
  }
  
  function confirmAddress() {
    const selected = getSelectedItems();
    if (!selected.length) return;

    let summaryHTML = "";
    let subtotal = 0;

    selected.forEach(p => {
      const product = productData[p.id];
      const price = parseInt(product.price);
      const total = price * p.qty;
      subtotal += total;
      summaryHTML += `
        <div style="margin-bottom: 8px;">
          <strong>${product.name || "Item"}</strong> √ó ${p.qty} = ‚Çπ${total}
        </div>`;
    });

    const totalAmount = subtotal + shippingCharge;
    summaryHTML += `<hr style="margin: 12px 0;">
      <div style="font-weight:bold;">Total Amount (incl. shipping): ‚Çπ${totalAmount}</div>`;

    document.getElementById("summaryDetails").innerHTML = summaryHTML;

    // Show the summary popup
    closeAddressPopup();
    document.getElementById("summaryPopup").style.display = "flex";
  }

</script>
<script>
  // Required fields except alt phone
  const requiredFields = ["fullname", "state", "city", "pincode", "address", "phone"];
  const confirmBtn = document.querySelector(".whatsapp-btn");

  function validateAddressForm() {
    const isValid = requiredFields.every(id => {
      const input = document.getElementById(id);
      return input && input.value.trim().length > 0;
    });
    confirmBtn.disabled = !isValid;
    confirmBtn.style.opacity = isValid ? "1" : "0.6";
    confirmBtn.style.cursor = isValid ? "pointer" : "not-allowed";
  }

  // Listen to input changes on all fields
  requiredFields.forEach(id => {
    document.getElementById(id).addEventListener("input", validateAddressForm);
  });

  // Initial state on popup open
  document.getElementById("showAddressBtn").onclick = () => {
    document.getElementById("addressPopup").style.display = "flex";
    validateAddressForm(); // validate on open
  };
</script>
<!-- Order Summary Popup -->
<div class="address-popup-overlay" id="summaryPopup">
<div class="address-popup-box" style="border: 2px solid #ccc;">
<span class="close-btn" onclick="document.getElementById('summaryPopup').style.display='none'">√ó</span>
<h3 style="text-align:center; margin-bottom: 14px; color:#1473E6;">Order Summary</h3>
<div id="summaryDetails" style="font-size: 14px; color: #333; margin-bottom: 20px; max-height: 300px; overflow-y: auto;"></div>
<button id="placeOrderBtn" style="width: 100%; padding: 12px; background: #1473E6; color: #fff; border: none; border-radius: 8px; font-weight: bold; font-size: 15px; cursor: pointer;">
  Pay via Razorpay
</button>
<button onclick="shareOnWhatsApp()" style="width: 100%; margin-top: 10px; padding: 12px; background: #25D366; color: #fff; border: none; border-radius: 8px; font-weight: bold; font-size: 15px; cursor: pointer;">
  Order via WhatsApp
</button>
</div>
</div>
<script src="https://checkout.razorpay.com/v1/checkout.js"></script>
<script>
  document.getElementById("placeOrderBtn").onclick = function () {
    const selected = getSelectedItems();
    let subtotal = 0;
    let orderDesc = "";

    selected.forEach(p => {
      const product = productData[p.id];
      const price = parseInt(product.price);
      const qty = p.qty;
      const total = price * qty;
      subtotal += total;
      orderDesc += `${product.name || "Item"} √ó ${qty} = ‚Çπ${total}\n`;
    });

    const totalAmount = subtotal + shippingCharge;

    const name = document.getElementById("fullname").value;
    const phone = document.getElementById("phone").value;
    const address = document.getElementById("address").value;
    const city = document.getElementById("city").value;
    const state = document.getElementById("state").value;
    const pincode = document.getElementById("pincode").value;

    const options = {
      key: "rzp_live_z9RbtukzIlUfMa",
      amount: totalAmount * 100, // amount in paise
      currency: "INR",
      name: "Gifts and Glory",
      description: "Order Payment",
      handler: function (response) {
        alert("‚úÖ Payment successful!");
        window.location.href = "thankyou.html"; // You can change this to your thank you page
      },
      prefill: {
        name: name,
        contact: phone
      },
      notes: {
        address: `${address}, ${city}, ${state} - ${pincode}`,
        orderDetails: orderDesc
      },
      theme: {
        color: "#1473E6"
      }
    };

    const rzp = new Razorpay(options);
    rzp.open();
  };
</script>
<script>
  function shareOnWhatsApp() {
  const selected = getSelectedItems();
  if (!selected.length) {
    alert("Please select at least one product.");
    return;
  }

  let message = "Order Details:\n";
  let subtotal = 0;

  selected.forEach(p => {
    const product = productData[p.id];
    const qty = p.qty;
    const price = parseInt(product.price);
    const total = qty * price;
    subtotal += total;
    message += `‚Ä¢ ${product.name || "Item"} √ó ${qty} = ‚Çπ${total}\nImage: ${product.image}\n\n`;
  });

  const shipping = typeof shippingCharge === "number" ? shippingCharge : 0;
  const grandTotal = subtotal + shipping;
  message += `Total (incl. shipping): ‚Çπ${grandTotal}\n\n`;

  // Address Fields
  const name = document.getElementById("fullname")?.value || "";
  const state = document.getElementById("state")?.value || "";
  const city = document.getElementById("city")?.value || "";
  const pincode = document.getElementById("pincode")?.value || "";
  const address = document.getElementById("address")?.value || "";
  const phone = document.getElementById("phone")?.value || "";
  const altPhone = document.getElementById("altphone")?.value || "";

  message += "*Customer Details*:\n";
  message += `Full Name: ${name}\n`;
  message += `State: ${state}\n`;
  message += `City: ${city}\n`;
  message += `Pincode: ${pincode}\n`;
  message += `Full Address: ${address}\n`;
  message += `Phone Number: ${phone}\n`;
  if (altPhone.trim()) {
    message += `Alternate Phone (Optional): ${altPhone}\n`;
  }

  // Add UPI ID at the end
  message += `\nUPI ID - 8744841734@pthdfc`;

  const phoneNumber = "918744841734";
  const link = `https://wa.me/${phoneNumber}?text=${encodeURIComponent(message)}`;
  window.open(link, "_blank");
}
</script>
<script>
function toggleMenu() {
  const menu = document.getElementById("sideMenu");
  const overlay = document.getElementById("menuOverlay");
  const isOpen = menu.style.left === "0px";
  menu.style.left = isOpen ? "-100%" : "0";
  overlay.style.display = isOpen ? "none" : "block";
}

function togglePopup() {
  const overlay = document.getElementById("popupOverlay");
  const box = overlay.querySelector(".popup-box");

  const isOpen = overlay.classList.contains("active");
  if (isOpen) {
    box.classList.remove("active");
    setTimeout(() => overlay.classList.remove("active"), 300);
  } else {
    overlay.classList.add("active");
    setTimeout(() => box.classList.add("active"), 10); // short delay to trigger transition
  }
}
</script>
<script>
let lastScrollTop = 0;
const header = document.querySelector("header");

window.addEventListener("scroll", function () {
  const currentScroll = window.pageYOffset || document.documentElement.scrollTop;

  if (currentScroll > lastScrollTop) {
    // Scrolling down
    header.style.transform = "translateY(-100%)";
  } else {
    // Scrolling up
    header.style.transform = "translateY(0)";
  }

  lastScrollTop = currentScroll <= 0 ? 0 : currentScroll;
});
</script></body>
</html>